#!/bin/sh
. "$(dirname "$0")/_/husky.sh"

# Workflow Enforcement Pre-commit Hook
# Ensures agents follow required development workflow

echo "üîç Running workflow validation..."

# Check 1: Prevent direct commits to main
current_branch=$(git rev-parse --abbrev-ref HEAD)
if [ "$current_branch" = "main" ] || [ "$current_branch" = "master" ]; then
    echo "‚ùå ERROR: Direct commits to $current_branch are FORBIDDEN!"
    echo ""
    echo "You MUST use feature branches and worktrees:"
    echo "  1. git worktree add ../wt-frontend -b feat/frontend/your-feature"
    echo "  2. cd ../wt-frontend"
    echo "  3. Make your changes there"
    echo ""
    echo "See AGENTS.md for the required workflow."
    exit 1
fi

# Check 2: Ensure branch follows naming convention
branch_pattern="^(feat|fix|test|chore|docs|perf|refactor)/(frontend|backend|api|ui|test|deploy|a11y)/[a-z0-9-]+$"
if ! echo "$current_branch" | grep -qE "$branch_pattern"; then
    echo "‚ö†Ô∏è  WARNING: Branch name doesn't follow required pattern!"
    echo ""
    echo "Recommended format: <type>/<agent>/<description>"
    echo "Examples:"
    echo "  - feat/frontend/waitlist-ui"
    echo "  - fix/backend/api-validation"
    echo "  - test/ui/component-coverage"
    echo ""
    echo "Your branch: $current_branch"
    echo "(Continuing anyway, but please consider following the pattern)"
fi

# Check 3: Run existing tests
npm test

# Check 4: Run lint-staged if configured
if [ -f "package.json" ] && grep -q "lint-staged" package.json; then
    npx lint-staged
fi

echo "‚úÖ Pre-commit checks passed!"

# Success
exit 0